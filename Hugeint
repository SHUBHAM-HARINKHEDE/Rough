class HugeInteger():
  
  #constructor
  def __init__(self):
    pass
  #parse String
  def parse(self):
    s= input("Enter integer:")
    self.hi=list(map(int,s))
    
  #addition of huge integer
  def add(self):
    pass
  #subtaction of huge integer
  def subtract(self):
    pass
  def isEqualTo(self,other):
    for i,j in self.hi,other.hi:
        if i!=j:
            return False
    return True
    
  def isNotEqualTo(self,other):
    for i,j in self.hi,other.hi:
        if i==j:
            return False
    return True
    
  def isGreaterThan(self,other):
    if len(self.hi)>len(other.hi):
        return True
    elif len(self.hi)==len(other.hi) and self.hi[0]>other.hi[0]:
        return True
    else:
        return False
        
  def isLessThan(self,other):
    if len(self.hi)<len(other.hi):
        return True
    elif len(self.hi)==len(other.hi) and self.hi[0]<other.hi[0]:
        return True
    else:
        return False
    
  def isGreaterThanEqualTo(self,other):
    if len(self.hi)>=len(other.hi):
        return True
    elif len(self.hi)==len(other.hi) and self.hi[0]>=other.hi[0]:
        return True
    else:
        return False
    
  def isLessThanEqualTo(self,other):
    if len(self.hi)<=len(other.hi):
        return True
    elif len(self.hi)==len(other.hi) and self.hi[0]<=other.hi[0]:
        return True
    else:
        return False
        
  def toString(self):
    print("".join([str(i) for i in self.hi]))
  
hi=HugeInteger()
hi.parse()
hi.toString()
hi2=HugeInteger()
hi2.parse()
hi2.toString()
print(hi.isLessThanEqualTo(hi2))
